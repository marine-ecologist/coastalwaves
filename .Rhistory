plot_palette_plotly(acanthastrea)
acanthastrea <- c("#ad8bb8", "#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25", "#a84743")
?show_col
show_col(acanthastrea)
acanthastrea <- c("#ad8bb8", "#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")#, "#a84743")
show_col(acanthastrea)
diverging_pal(acanthastrea, n = 100)
diverging_pal(acanthastrea, n = 100) |> plot_palette_plotly
diverging_pal(acanthastrea, n = 100) |> plot_palette_plotly()
diverging_pal(acanthastrea, n = 100) |> plot_palette()
diverging_from_vec <- function(cols, n = 11) {
# treat first and last as poles
pal_fun <- scales::seq_gradient_pal(cols[1], cols[length(cols)], "Lab")
pal_fun(seq(0,1,length.out = n))
}
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_ly(
x = seq_along(div_cols),
y = rep(1, length(div_cols)),
type = "bar",
marker = list(color = div_cols),
text = div_cols,
hoverinfo = "text"
) |>
layout(
xaxis = list(showticklabels = FALSE, showgrid = FALSE),
yaxis = list(showticklabels = FALSE, showgrid = FALSE),
bargap = 0,
showlegend = FALSE
)
diverging_pal(acanthastrea, n = 100) |> scales::gradient_n_pal("Lab")(seq(0, 1, length.out = 20))
diverging_from_vec <- function(cols, n = 21) {
scales::gradient_n_pal(cols, "Lab")(seq(0, 1, length.out = n))
}
div_cols <- diverging_from_vec(acanthastrea, n = 21)
library(scales)
diverging_from_vec <- function(cols, n = 21) {
cols <- cols[!is.na(cols)]              # drop NAs if any
scales::gradient_n_pal(cols, "Lab")(seq(0, 1, length.out = n))
}
div_cols <- diverging_from_vec(acanthastrea, n = 21)
library(scales)
library(plotly)
diverging_from_vec <- function(cols, n = 21) {
# remove any NA or empty entries
cols <- cols[!is.na(cols) & cols != ""]
if (length(cols) < 2) stop("Need at least two colors.")
# interpolate through all supplied colors
pal_fun <- gradient_n_pal(cols, "Lab")
pal_fun(seq(0, 1, length.out = n))
}
div_cols <- diverging_from_vec(acanthastrea, n = 21)
acanthastrea
library(scales)
diverging_from_vec <- function(cols, n = 21) {
cols <- cols[!is.na(cols) & cols != ""]
stopifnot(length(cols) >= 2)
pal_fun <- gradient_n_pal(cols, space = "Lab")
pal_fun(seq(0, 1, length.out = n))
}
acanthastrea <- c("#ad8bb8", "#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
div_cols
diverging_from_vec <- function(cols, n = 21) {
cols <- cols[!is.na(cols) & cols != ""]
stopifnot(length(cols) >= 2)
pal_fun <- gradient_n_pal(cols, space = "Lab")
pal_fun(seq(0, 1, length.out = n))
}
acanthastrea <- c("#ad8bb8", "#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
div_cols
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#039FFF","#009382", "#F9B908","#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908")#,"#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#039FFF","#018CAF", "#F9B908")#,"#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#018CAF","#009382", "#F9B908")#,"#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
acanthastrea <- c("#0570c2","#018CAF","#009382", "#CE5D25")#,"#CE5D25")
div_cols <- diverging_from_vec(acanthastrea, n = 21)
plot_palette_plotly(div_cols)
plot_palette <- function(hex) {
barplot(rep(1, length(hex)),
col = hex,
border = NA,
axes = FALSE,
space = 0)
}
diverging_pal <- function(cols, n = 7) {
# pick two opposite colours
start <- cols[1]
end   <- cols[length(cols)]
scales::seq_gradient_pal(start, end, "Lab")(seq(0,1,length.out = n))
}
?plotly::plot_ly
?image_read
?count
get_palette <- function(image_path, n = 5, sat=20, brightmin=100, brightmax=200) {
img <- magick::image_read(image_path) |> image_scale("500")
im  <- magick::magick2cimg(img)
df  <- as.data.frame(im, wide = "c") |>
dplyr::mutate(hex = rgb(c.1, c.2, c.3)) |>
dplyr::count(hex, sort = TRUE)
# remove near grayscale
rgb_vals <- col2rgb(df$hex)
sat <- apply(rgb_vals, 2, function(x) {
max(x) - min(x)
})
bright <- colMeans(rgb_vals)
keep <- sat > sat & bright > brightmin & bright < brightmax
df <- df[keep, ] |> slice_max(n, n = n)
df$hex
}
?colMeans
get_palette <- function(image_path, n = 5, sat=20, brightmin=100, brightmax=200) {
img <- magick::image_read(image_path) |> image_scale("500")
im  <- magick::magick2cimg(img)
df  <- as.data.frame(im, wide = "c") |>
dplyr::mutate(hex = rgb(c.1, c.2, c.3)) |>
dplyr::count(hex, sort = TRUE)
# remove near grayscale
rgb_vals <- col2rgb(df$hex)
sat <- apply(rgb_vals, 2, function(x) {
max(x) - min(x)
})
bright <- colMeans(rgb_vals)
keep <- sat > sat & bright > brightmin & bright < brightmax
df <- df[keep, ] |> slice_max(n, n = n)
df$hex
}
plot_palette <- function(hex) {
barplot(rep(1, length(hex)),
col = hex,
border = NA,
axes = FALSE,
space = 0)
}
diverging_pal <- function(cols, n = 7) {
# pick two opposite colours
start <- cols[1]
end   <- cols[length(cols)]
scales::seq_gradient_pal(start, end, "Lab")(seq(0,1,length.out = n))
}
plot_palette_plotly <- function(hex) {
plotly::plot_ly(
x = seq_along(hex),
y = rep(1, length(hex)),
type = "bar",
marker = list(color = hex),
text = hex,
hoverinfo = "text"
) |>
layout(
xaxis = list(showticklabels = FALSE, showgrid = FALSE),
yaxis = list(showticklabels = FALSE, showgrid = FALSE),
bargap = 0,
showlegend = FALSE
)
}
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 50)
?magick2cimg
get_palette <- function(image_path, n = 5, sat=20, brightmin=100, brightmax=200) {
img <- magick::image_read(image_path) |> image_scale("500")
im  <- imager::magick2cimg(img)
df  <- as.data.frame(im, wide = "c") |>
dplyr::mutate(hex = rgb(c.1, c.2, c.3)) |>
dplyr::count(hex, sort = TRUE)
# remove near grayscale
rgb_vals <- col2rgb(df$hex)
sat <- apply(rgb_vals, 2, function(x) {
max(x) - min(x)
})
bright <- colMeans(rgb_vals)
keep <- sat > sat & bright > brightmin & bright < brightmax
df <- df[keep, ] |> slice_max(n, n = n)
df$hex
}
plot_palette <- function(hex) {
barplot(rep(1, length(hex)),
col = hex,
border = NA,
axes = FALSE,
space = 0)
}
diverging_pal <- function(cols, n = 7) {
# pick two opposite colours
start <- cols[1]
end   <- cols[length(cols)]
scales::seq_gradient_pal(start, end, "Lab")(seq(0,1,length.out = n))
}
plot_palette_plotly <- function(hex) {
plotly::plot_ly(
x = seq_along(hex),
y = rep(1, length(hex)),
type = "bar",
marker = list(color = hex),
text = hex,
hoverinfo = "text"
) |>
layout(
xaxis = list(showticklabels = FALSE, showgrid = FALSE),
yaxis = list(showticklabels = FALSE, showgrid = FALSE),
bargap = 0,
showlegend = FALSE
)
}
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 50)
acanthastrea
acanthastrea
get_palette <- function(image_path, n = 5, sat=20, brightmin=100, brightmax=200) {
img <- magick::image_read(image_path) |> image_scale("500")
im  <- imager::magick2cimg(img)
df  <- as.data.frame(im, wide = "c") |>
dplyr::mutate(hex = rgb(c.1, c.2, c.3)) |>
dplyr::count(hex, sort = TRUE)
# remove near grayscale
rgb_vals <- col2rgb(df$hex)
sat <- apply(rgb_vals, 2, function(x) {
max(x) - min(x)
})
bright <- colMeans(rgb_vals)
keep <- sat > sat & bright > brightmin & bright < brightmax
df <- df[keep, ] |> slice_max(n, n = n)
df$hex
}
plot_palette <- function(hex) {
barplot(rep(1, length(hex)),
col = hex,
border = NA,
axes = FALSE,
space = 0)
}
diverging_pal <- function(cols, n = 7) {
# pick two opposite colours
start <- cols[1]
end   <- cols[length(cols)]
scales::seq_gradient_pal(start, end, "Lab")(seq(0,1,length.out = n))
}
plot_palette_plotly <- function(hex) {
plotly::plot_ly(
x = seq_along(hex),
y = rep(1, length(hex)),
type = "bar",
marker = list(color = hex),
text = hex,
hoverinfo = "text"
) |>
layout(
xaxis = list(showticklabels = FALSE, showgrid = FALSE),
yaxis = list(showticklabels = FALSE, showgrid = FALSE),
bargap = 0,
showlegend = FALSE
)
}
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 50)
acanthastrea
get_palette <- function(image_path, n = 5, sat_min = 20, bright_min = 100, bright_max = 200) {
img <- magick::image_read(image_path) |> magick::image_scale("500")
im  <- imager::magick2cimg(img)
df  <- as.data.frame(im, wide = "c") |>
dplyr::mutate(hex = grDevices::rgb(c.1, c.2, c.3)) |>
dplyr::count(hex, sort = TRUE)
rgb_vals <- grDevices::col2rgb(df$hex)
saturation <- apply(rgb_vals, 2, function(x) max(x) - min(x))
brightness <- colMeans(rgb_vals)
keep <- saturation > sat_min & brightness > bright_min & brightness < bright_max
df <- df[keep, ] |> dplyr::slice_max(n, n = n)
df$hex
}
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 50)
acanthastrea
plot_palette(acanthastrea)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 10)
plot_palette(acanthastrea)
div_cols <- diverging_pal(tmp, n = 9)
acanthastrea_diverging <- diverging_pal(acanthastrea, n = 9)
plot_palette(acanthastrea_diverging)
plot_palette(acanthastrea)
plot_palette_plotly(acanthastrea)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 10)
plot_palette(acanthastrea)
plot_palette_plotly(acanthastrea)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
plot_palette(acanthastrea)
plot_palette_plotly(acanthastrea)
pick_diverging <- function(pal, n = 7) {
pal <- pal[!is.na(pal) & pal != ""]
pal[round(seq(1, length(pal), length.out = n))]
}
div7 <- pick_diverging(pal, 7)
acanthastrea_7 <- pick_diverging(acanthastrea, 7)
plot_palette(acanthastrea_7)
acanthastrea_7 <- pick_diverging(acanthastrea, 6)
plot_palette(acanthastrea_7)
library(farver)
library(dplyr)
pick_diverging_clustered <- function(pal, k = 7) {
pal <- pal[!is.na(pal) & pal != ""]
rgb <- grDevices::col2rgb(pal)
lab <- convert_colour(t(rgb), from = "rgb", to = "lab")
km  <- kmeans(lab, centers = k)
# get cluster medians
sapply(split(pal, km$cluster), function(g) g[1])
}
div7 <- pick_diverging_clustered(pal, k = 7)
pick_diverging_clustered <- function(pal, k = 7) {
pal <- pal[!is.na(pal) & pal != ""]
rgb <- grDevices::col2rgb(pal)
lab <- convert_colour(t(rgb), from = "rgb", to = "lab")
km  <- kmeans(lab, centers = k)
# get cluster medians
sapply(split(pal, km$cluster), function(g) g[1])
}
div7 <- pick_diverging_clustered(acanthastrea, k = 7)
barplot(rep(1, length(div7)), col = div7, border = NA, axes = FALSE, space = 0)
div7 <- pick_diverging_clustered(acanthastrea, k = 6)
barplot(rep(1, length(div7)), col = div7, border = NA, axes = FALSE, space = 0)
library(farver)
pick_max_dist <- function(pal, k = 7) {
pal <- pal[!is.na(pal) & pal != ""]
lab <- t(col2rgb(pal))
lab <- convert_colour(lab, from = "rgb", to = "lab")
# start with first and last
idx <- c(1, length(pal))
while (length(idx) < k) {
remaining <- setdiff(seq_len(nrow(lab)), idx)
d <- sapply(remaining, function(i) min(stats::dist(rbind(lab[idx, ], lab[i, ]))))
idx <- c(idx, remaining[which.max(d)])
}
pal[idx]
}
div7 <- pick_max_dist(acanthastrea, k = 7)
barplot(rep(1, length(div7)), col = div7, border = NA, axes = FALSE, space = 0)
diverging_pal <- function(pal, k = 7) {
pal <- pal[!is.na(pal) & pal != ""]
lab <- t(grDevices::col2rgb(pal))
lab <- farver::convert_colour(lab, from = "rgb", to = "lab")
idx <- c(1, length(pal))
while (length(idx) < k) {
remaining <- setdiff(seq_len(nrow(lab)), idx)
d <- sapply(remaining, function(i)
min(stats::dist(rbind(lab[idx, , drop=FALSE], lab[i, , drop=FALSE])))
)
idx <- c(idx, remaining[which.max(d)])
}
pal[idx]
}
acanthastrea_diverging <- diverging_pal(acanthastrea, n = 9)
diverging_pal
diverging_pal <- function(pal, n = 7) {
pal <- pal[!is.na(pal) & pal != ""]
lab <- t(grDevices::col2rgb(pal))
lab <- farver::convert_colour(lab, from = "rgb", to = "lab")
idx <- c(1, length(pal))
while (length(idx) < n) {
remaining <- setdiff(seq_len(nrow(lab)), idx)
d <- sapply(remaining, function(i)
min(stats::dist(rbind(lab[idx, , drop=FALSE], lab[i, , drop=FALSE])))
)
idx <- c(idx, remaining[which.max(d)])
}
pal[idx]
}
acanthastrea_diverging <- diverging_pal(acanthastrea, n = 9)
plot_palette(acanthastrea_diverging)
acanthastrea_diverging <- diverging_pal(acanthastrea, n = 4)
plot_palette(acanthastrea_diverging)
acanthastrea_diverging <- diverging_pal(acanthastrea, n = 5)
plot_palette(acanthastrea_diverging)
show_col(acanthastrea)
acanthastrea_5 <- diverging_pal(acanthastrea, n = 5)
plot_palette(acanthastrea_5)
show_col(acanthastrea_5)
acanthastrea_5 <- diverging_pal(acanthastrea, n = 6)
plot_palette(acanthastrea_5)
show_col(acanthastrea_5)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
plot_palette(acanthastrea)
plot_palette_plotly(acanthastrea)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")#, "#a84743")
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25")#, "#a84743")
plot_palette(acanthastrea)
plot_palette_plotly(acanthastrea)
show_col(acanthastrea_5)
show_col(acanthastrea)
show_col(scales::gradient_n_pal(acanthastrea, "Lab")(seq(0, 1, length.out = 20)))
make_continuous <- function(cols, n = 100) {
cols <- cols[!is.na(cols) & cols != ""]
if (length(cols) < 2) stop("Need at least two colors")
pal_fun <- scales::gradient_n_pal(cols, space = "Lab")
pal_fun(seq(0, 1, length.out = n))
}
# Example: make a 100-step continuous palette from 7 diverging colours
continuous_pal <- make_continuous(div7, n = 100)
graphics::barplot(rep(1, length(continuous_pal)),
col = continuous_pal,
border = NA,
axes = FALSE,
space = 0)
continuous_pal <- function(cols, n = 10) {
cols <- cols[!is.na(cols) & cols != ""]
if (length(cols) < 2) stop("Need at least two colors")
pal_fun <- scales::gradient_n_pal(cols, space = "Lab")
pal_fun(seq(0, 1, length.out = n))
}
continuous_pal(acanthastrea, 10) |> show_col()
continuous_pal(acanthastrea, 4) |> show_col()
continuous_pal(acanthastrea, 15) |> show_col()
continuous_pal(acanthastrea, 10) |> show_col()
continuous_pal(acanthastrea, 8) |> show_col()
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908","#CE5D25", "#a84743")
show_col(acanthastrea)
continuous_pal(acanthastrea, 8) |> show_col()
show_col(scales::gradient_n_pal(acanthastrea, "Lab")(seq(0, 1, length.out = 20)))
continuous_pal(acanthastrea, 20) |> show_col()
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908", "#a84743")
show_col(acanthastrea)
continuous_pal(acanthastrea, 20) |> show_col()
scales::col2hex(scales::muted("#0570c2", amount = 0.2))
col2hex(scales::muted("#0570c2", amount = 0.2))
darken <- function(hex, amount = 0.2) {
rgb <- grDevices::col2rgb(hex) / 255
rgb <- rgb * (1 - amount)
grDevices::rgb(rgb[1], rgb[2], rgb[3])
}
darken("#0570c2", 0.2)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
acanthastrea <- c("#045A9B","#039FFF","#018CAF","#009382", "#F9B908", "#a84743")
show_col(acanthastrea)
continuous_pal(acanthastrea, 20) |> show_col()
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
acanthastrea <- c("#045A9B","#039FFF","#018CAF","#009382", "#F9B908", "#a84743")
show_col(acanthastrea)
continuous_pal(acanthastrea, 20) |> show_col()
show_col(scales::gradient_n_pal(acanthastrea, "Lab")(seq(0, 1, length.out = 20)))
show_col(acanthastrea)
continuous_pal(acanthastrea, 20) |> show_col()
darken <- function(hex, amount = 0.2) {
rgb <- grDevices::col2rgb(hex) / 255
rgb <- rgb * (1 - amount)
grDevices::rgb(rgb[1], rgb[2], rgb[3])
}
darken("#039FFF", 0.2)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#009382", "#F9B908", "#a84743")
show_col(acanthastrea)
lighten("#009382", 0.2)
grDevices::rgb(rgb[1], rgb[2], rgb[3])
lighten <- function(hex, amount = 0.2) {
rgb <- grDevices::col2rgb(hex) / 255
rgb <- rgb + (1 - rgb) * amount
grDevices::rgb(rgb[1], rgb[2], rgb[3])
}
lighten("#009382", 0.2)
lighten("#009382", 0.2)
lighten <- function(hex, amount = 0.2) {
rgb <- grDevices::col2rgb(hex) / 255
rgb <- rgb + (1 - rgb) * amount
grDevices::rgb(rgb[1], rgb[2], rgb[3])
}
lighten("#009382", 0.2)
lighten <- function(hex, amount = 0.2) {
rgb <- grDevices::col2rgb(hex) / 255
rgb <- pmin(1, rgb * (1 + amount))
grDevices::rgb(rgb[1], rgb[2], rgb[3])
}
# Example
lighten("#0570c2", 0.2)
# Example
lighten("#009382", 0.2)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#00B09C", "#F9B908", "#a84743")
show_col(acanthastrea)
acanthastrea <- get_palette("/Users/rof011/Downloads/3642-stock.jpg", n = 100)
acanthastrea <- c("#0570c2","#039FFF","#018CAF","#00B09C", "#F9B908", "#a84743")
show_col(acanthastrea)
continuous_pal(acanthastrea, 20) |> show_col()
files <- list.files("/Users/rof011/Desktop/images", pattern = "porites", full.names = TRUE)
palettes <- purrr::map(files, ~get_palette(.x, n = 20))
names(palettes) <- basename(files)
palettes
palettes
files
files <- list.files("/Users/rof011/Desktop/images/", pattern = "Porites", full.names = TRUE)
files
files <- list.files("/Users/rof011/Desktop/images/", pattern = "Porites", full.names = TRUE)
files
files
files <- list.files("/Users/rof011/Downloads/images/", pattern = "Porites", full.names = TRUE)
files
files <- list.files("/Users/rof011/Downloads/images/", pattern = "porites", full.names = TRUE)
files
palettes <- purrr::map(files, ~get_palette(.x, n = 20))
names(palettes) <- basename(files)
palettes
palettes_vec <- unlist(palettes, use.names = FALSE)
palettes_vec
plot_palette(palettes_vec)
plot_palette(diverging_pal(palettes_vec, n=7))
